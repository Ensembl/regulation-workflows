---
# MOTIF MAPPING PIPELINE
#
#   PARAMS:
#     - species_name
#     - assembly_ensembl_accession
#     - epigenome_group_id
#     - epigenome_name_contains
#     - target_name_contains
#     - ad_hoc_playground_prefix
#     - output_prefix_label
#     - skip
#     - limit
#     - overwrite-results
#     - kubeconfig-path
#
#   DAGs:
#     - get-motif-mapping-tasks-dag:
#         Entry point DAG. Make the request to the
#         API (motif mapping endpoint) based on the params,
#         and trigger another DAG (motif-mapping-tasks-dag).
#     - submit-motif-mapping-tasks:
#         Parallelize the API's response by triggering a DAG
#         (motif-mapping-by-target-dag) for each TF target.
#     - run-bedtools-intersect-dag:
#         Parallelize peaks file and bms file intersection by
#         running bedtools intersect for each experiment.


apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: get-motif-mapping-tasks-
spec:
  entrypoint: get-motif-mapping-tasks-dag
  imagePullSecrets:
    - name: ghcr-pull-token
  podGC:
    strategy: OnPodSuccess
  templates:
    - name: get-motif-mapping-tasks-dag
      inputs:
        parameters:
          - name: species_name
            value: ""
          - name: assembly_ensembl_accession
            value: ""
          - name: epigenome_group_id
            value: ""
          - name: epigenome_name_contains
            value: ""
          - name: target_name_contains
            value: ""
          - name: ad_hoc_playground_prefix
            value: ""
          - name: output_prefix_label
            value: ""
          - name: skip
            value: "0"
          - name: limit
            value: "20"
          - name: overwrite-results
            value: "false"
          - name: pval
          - name: kubeconfig-path
      dag:
        tasks:
          - name: get-motif-mapping-tasks-url
            template: compute-get-motif-mapping-tasks-url
            arguments:
              parameters:
                - name: svc-name
                  value: "regulation-pipelines-api-service"
                - name: namespace
                  value: "regulation-pipelines-api"
                - name: species_name
                  value: "{{inputs.parameters.species_name}}"
                - name: assembly_ensembl_accession
                  value: "{{inputs.parameters.assembly_ensembl_accession}}"
                - name: epigenome_group_id
                  value: "{{inputs.parameters.epigenome_group_id}}"
                - name: epigenome_name_contains
                  value: "{{inputs.parameters.epigenome_name_contains}}"
                - name: target_name_contains
                  value: "{{inputs.parameters.target_name_contains}}"
                - name: ad_hoc_playground_prefix
                  value: "{{inputs.parameters.ad_hoc_playground_prefix}}"
                - name: output_prefix_label
                  value: "{{inputs.parameters.output_prefix_label}}"
                - name: skip
                  value: "{{inputs.parameters.skip}}"
                - name: limit
                  value: "{{inputs.parameters.limit}}"
          - name: mock-api-request
            depends: "get-motif-mapping-tasks-url"
            template: mock-api-request-cmd
            arguments:
              parameters:
                - name: url
                  value: "{{tasks.get-motif-mapping-tasks-url.outputs.result}}"
                - name: pval
                  value: "{{inputs.parameters.pval}}"

          - name: submit-motif-mapping-tasks
            depends: "mock-api-request"
            template: motif-mapping-tasks-dag
            arguments:
              parameters:
                - name: overwrite-results
                  value: "{{inputs.parameters.overwrite-results}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
                - name: count
                  value: "{{tasks.mock-api-request.outputs.parameters.count}}"
                - name: pval
                  value: "{{inputs.parameters.pval}}"
              artifacts:
                - name: items
                  from: "{{tasks.mock-api-request.outputs.artifacts.items}}"

    - name: compute-get-motif-mapping-tasks-url
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: svc-name
          - name: namespace
          - name: species_name
          - name: assembly_ensembl_accession
          - name: epigenome_group_id
          - name: epigenome_name_contains
          - name: target_name_contains
          - name: ad_hoc_playground_prefix
          - name: output_prefix_label
          - name: skip
          - name: limit
      script:
        image: ghcr.io/daugo/ensembl-reg-python:latest
        command: [python]
        source: |
          import sys
          import os
          import urllib.parse

          def main() -> int:

            query_params = {
              "species_name": f"{{inputs.parameters.species_name}}",
              "assembly_ensembl_accession": f"{{inputs.parameters.assembly_ensembl_accession}}",
              "epigenome_group_id": f"{{inputs.parameters.epigenome_group_id}}",
              "epigenome_name_contains": f"{{inputs.parameters.epigenome_name_contains}}",
              "target_name_contains": f"{{inputs.parameters.target_name_contains}}",
              "ad_hoc_playground_prefix": f"{{inputs.parameters.ad_hoc_playground_prefix}}",
              "output_prefix_label": f"{{inputs.parameters.output_prefix_label}}",
              "skip": f"{{inputs.parameters.skip}}",
              "limit": f"{{inputs.parameters.limit}}",
            }

            parsed_query_params = "".join(
              [
                f"&{key}={value}" for key, value in query_params.items()
                if value
              ]
            )

            url_str = (f"http://{{inputs.parameters.svc-name}}."
                  f"{{inputs.parameters.namespace}}."
                  "svc.cluster.local"
                  ":80"
                  "/api/v1"
                  "/motif_mapping_tasks"
                  f"?{parsed_query_params}"
            )

            print(urllib.parse.quote(url_str, safe=":/?=&"))

            return 0

          if __name__ == '__main__':
              sys.exit(main())
    - name: mock-api-request-cmd
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: url
          - name: pval
      outputs:
        artifacts:
          - name: items
            path: /tmp/items
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      script:
        image: ghcr.io/daugo/ensembl-reg-python:latest
        command: [python]
        source: |
          import sys
          import json

          def main() -> int:

            payload = json.loads(
            """
            
                [
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "FOS",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-fos-endothelial-cell-of-umbilical-vein-from-experiment-encsr000evu_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-fos-imr-90-from-experiment-encsr124aig_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "ATF7",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-atf7-gm12878-from-experiment-encsr014ycr_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "JUN",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-jun-a549-from-experiment-encsr192pbj_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "BACH1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-bach1-gm12878-from-experiment-encsr636mku_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-bach1-h1-from-experiment-encsr000ebq_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "USF1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-usf1-h1-from-experiment-encsr000biu_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "SREBF2",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-srebf2-a549-from-experiment-encsr638qyo_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "CEBPB",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-cebpb-a549-from-experiment-encsr000bub_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-cebpb-a549-from-experiment-encsr000dyi_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-cebpb-h1-from-experiment-encsr000ebv_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-cebpb-imr-90-from-experiment-encsr000efm_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "TEAD4",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-tead4-h1-from-experiment-encsr000bry_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "MAX",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-max-a549-from-experiment-encsr000btj_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-max-a549-from-experiment-encsr000dyg_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-max-gm12878-from-experiment-encsr000dzf_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-max-h1-from-experiment-encsr000bsj_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "CTCF",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-adrenal-gland-from-experiment-encsr188xcx_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-astrocyte-of-the-cerebellum-from-experiment-encsr000dsz_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-astrocyte-of-the-spinal-cord-from-experiment-encsr000dsu_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-astrocyte_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-b-cell-f_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-brain-from-experiment-encsr467eqp_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-brain-from-experiment-encsr930sot_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-brain-microvascular-endothelial-cell-from-experiment-encsr000dta_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-bronchial-epithelial-cell_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-cardiac-muscle-cell-from-experiment-encsr000dti_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-cd14-positive-monocyte-f_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-choroid-plexus-epithelial-cell-from-experiment-encsr000dtl_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-dorsolateral-prefrontal-cortex-from-experiment-encsr351swl_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-dorsolateral-prefrontal-cortex-from-experiment-encsr705dnm_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-endothelial-cell-of-umbilical-vein-from-experiment-encsr000dvp_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-epithelial-cell-of-esophagus-from-experiment-encsr000dtr_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-epithelial-cell-of-prostate-from-experiment-encsr196hom_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-epithelial-cell-of-proximal-tubule-from-experiment-encsr000dxd_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-dermis_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-lung-from-experiment-encsr000ano_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-lung_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-mammary-gland-f_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-pulmonary-artery-from-experiment-encsr000dux_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-the-aortic-adventitia-from-experiment-encsr000dpy_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-fibroblast-of-villous-mesenchyme-from-experiment-encsr000dvq_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-foreskin-fibroblast-m_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-foreskin-keratinocyte-from-experiment-encsr817htj_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-gastrocnemius-medialis-from-experiment-encsr355alw_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-keratinocyte-f_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-keratinocyte-from-experiment-encsr000alj_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-keratinocyte-from-experiment-encsr000dwx_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-kidney-epithelial-cell_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-kidney-from-experiment-encsr000dmc_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-lung-from-experiment-encsr000dmh_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-mammary-epithelial-cell-f_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-mammary-epithelial-cell-from-experiment-encsr000alv_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-neutrophil_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-osteoblast_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-pancreas-from-experiment-encsr000dnd_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-prostate-gland-from-experiment-encsr230ort_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-retinal-pigment-epithelial-cell-from-experiment-encsr000dvi_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-skeletal-muscle-myoblast_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-spleen-f-53-y_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-spleen-from-experiment-encsr000dni_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-spleen-from-experiment-encsr225ygx_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-spleen-from-experiment-encsr595bpr_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-spleen-m-37-y_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-transverse-colon-f-51-y_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-transverse-colon-from-experiment-encsr236ygf_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-transverse-colon-from-experiment-encsr608wps_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ctcf-transverse-colon-from-experiment-encsr907bes_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "E2F8",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-e2f8-gm12878-from-experiment-encsr793hvl_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "EBF1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ebf1-gm12878-from-experiment-encsr000bgu_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-ebf1-gm12878-from-experiment-encsr000dzq_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "EGR1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-egr1-gm12878-from-experiment-encsr000bmq_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "ELF1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-elf1-gm12878-from-experiment-encsr000bmb_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-elf1-gm12878-from-experiment-encsr841ndx_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "ELF4",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-elf4-hek293t-from-experiment-encsr778qly_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "TBX21",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-tbx21-gm12878-from-experiment-encsr739ihn_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "ETV6",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-etv6-gm12878-from-experiment-encsr597vgc_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "FOXA1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-foxa1-hek293t-from-experiment-encsr094who_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "GABPA",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-gabpa-h1-from-experiment-encsr000biw_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "GATA1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-gata1-erythroblast-from-experiment-encsr000exp_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "GATA3",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-gata3-a549-from-experiment-encsr000bti_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "HNF4A",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-hnf4a-liver-from-experiment-encsr445qrf_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "IRF3",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-irf3-gm12878-from-experiment-encsr408jqo_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "IRF5",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-irf5-gm12878-from-experiment-encsr976tbc_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "IRF4",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-irf4-gm12878-from-experiment-encsr000bgy_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "SP1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-sp1-h1-from-experiment-encsr000bir_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-sp1-hek293t-from-experiment-encsr906pei_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-sp1-liver-from-experiment-encsr386yih_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "LEF1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-lef1-hek293t-from-experiment-encsr240xwm_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "MAFK",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-mafk-a549-from-experiment-encsr541wqi_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-mafk-h1-from-experiment-encsr000ebs_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-mafk-imr-90-from-experiment-encsr000efh_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "MEF2A",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-mef2a-gm12878-from-experiment-encsr000bkb_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "MEF2B",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-mef2b-gm12878-from-experiment-encsr177vfs_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "PKNOX1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pknox1-gm12878-from-experiment-encsr711xny_p_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pknox1-hek293t-from-experiment-encsr233fag_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "NR2F1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-nr2f1-gm12878-from-experiment-encsr514vyd_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "RXRA",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-rxra-liver-from-experiment-encsr352qsb_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "NRF1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-nrf1-gm12878-from-experiment-encsr000dzo_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-nrf1-h1-from-experiment-encsr000ecc_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "PAX5",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pax5-gm12878-from-experiment-encsr000bhd_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pax5-gm12878-from-experiment-encsr000bhj_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pax5-gm12891-from-experiment-encsr000bjh_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pax5-gm12892-from-experiment-encsr000bji_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "POU2F2",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pou2f2-gm12878-from-experiment-encsr000bgp_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-pou2f2-gm12891-from-experiment-encsr000bii_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "RFX5",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-rfx5-a549-from-experiment-encsr064ljn_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "RUNX3",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-runx3-gm12878-from-experiment-encsr000bri_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "SPI1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-spi1-gm12878-from-experiment-encsr000bgq_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-spi1-gm12891-from-experiment-encsr000bij_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "SRF",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-srf-gm12878-from-experiment-encsr000bge_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-srf-gm12878-from-experiment-encsr000bmi_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-srf-gm12878-from-experiment-encsr041xml_p_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "TCF3",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-tcf3-gm12878-from-experiment-encsr000bqt_q_0_1.bed"
                            }
                        ]
                    },
                    {
                        "assembly_id": "73b274e2-7884-49b7-b721-d7a147086448",
                        "genome_s3_key": "reference-genome-bowtie2-index/Homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz",
                        "bm_s3_key": "plins/selex/GRCh38.json",
                        "target_name_1": "YY1",
                        "target_name_2": "",
                        "out_basename": "ctcf-validated-motifs",
                        "out_s3_prefix": "plins/motifs/Homo_sapiens/GRCh38/exp/{{inputs.parameters.pval}}/",
                        "experiments": [
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-yy1-gm12891-from-experiment-encsr000bkj_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-yy1-gm12892-from-experiment-encsr000blt_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-yy1-h1-from-experiment-encsr000bkd_q_0_1.bed"
                            },
                            {
                                "peaks_s3_key": "gmerino/113/TF_peaks_postQC/chip-seq-narrow-peaks-GRCh38-chip-seq-yy1-liver-from-experiment-encsr994ylz_q_0_1.bed"
                            }
                        ]
                    }
                ]              
            """
            )

            with open('/tmp/items', 'w') as f:
              f.write(json.dumps(payload))
            with open('/tmp/count', 'w') as f:
              f.write(f'{len(payload)}')

            return 0

          if __name__ == '__main__':
            sys.exit(main())
    - name: motif-mapping-tasks-dag
      parallelism: 20
      inputs:
        parameters:
          - name: overwrite-results
          - name: kubeconfig-path
          - name: pval
          - name: count
        artifacts:
          - name: items
      dag:
        tasks:
          - name: submit-get-wf-task-payload-by-index-dag 
            template: get-wf-task-payload-by-index-dag
            arguments:
              parameters:
                - name: index
                  value: "{{item}}"
                - name: overwrite-results
                  value: "{{inputs.parameters.overwrite-results}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
                - name: pval
                  value: "{{inputs.parameters.pval}}"
              artifacts:
                - name: items
                  from: "{{inputs.artifacts.items}}"
            withSequence:
              count: "{{inputs.parameters.count}}"

    - name: get-wf-task-payload-by-index-dag
      inputs:
        parameters:
          - name: index
          - name: kubeconfig-path
          - name: overwrite-results
          - name: pval
        artifacts:
          - name: items

      dag:
        tasks:
          - name: submit-get-wf-task-payload-by-index
            templateRef: 
              name: get-wf-task-payload-by-index-v1-submittable
              template: get-wf-task-payload-by-index 
            arguments:
              parameters:
                - name: index
                  value: "{{inputs.parameters.index}}"
              artifacts:
                - name: items
                  from: "{{inputs.artifacts.items}}"
          - name: submit-motif-mapping-by-target
            depends: submit-get-wf-task-payload-by-index
            template: motif-mapping-by-target-dag
            arguments:
              parameters:
                - name: task-payload
                  value: "{{tasks.submit-get-wf-task-payload-by-index.outputs.parameters.task-payload}}"
                - name: target-name-1
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.target_name_1'
                      )
                    }}
                - name: target-name-2
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.target_name_2'
                      )
                    }}
                - name: assembly-id
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.assembly_id'
                      )
                    }}
                - name: genome-s3-key
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.genome_s3_key'
                      )
                    }}
                - name: out-s3-key
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.out_s3_prefix'
                      )
                    }}{{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.out_basename'
                      )
                    }}

                - name: bm-s3-key
                  value: >-
                    {{=
                      jsonpath(
                        tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                        '$.bm_s3_key'
                      )
                    }}
                - name: experiments
                  value: >-
                    {{=
                      toJson(
                        jsonpath(
                          tasks['submit-get-wf-task-payload-by-index'].outputs.parameters['task-payload'], 
                          '$.experiments'
                        )
                      )
                    }}
                - name: overwrite-results
                  value: "{{inputs.parameters.overwrite-results}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
                - name: force-update-task-markers
                  value: "false"
                - name: pval
                  value: "{{inputs.parameters.pval}}"


    - name: motif-mapping-by-target-dag
      inputs:
        parameters:
          - name: task-payload
          - name: target-name-1
          - name: target-name-2
          - name: assembly-id
          - name: genome-s3-key
          - name: out-s3-key
          - name: bm-s3-key
          - name: experiments
          - name: overwrite-results
          - name: kubeconfig-path 
          - name: pval
          - name: force-update-task-markers
            value: "false"
      dag:
        tasks:
          - name: get-motif-mapping-pvc-size
            templateRef:
              name: compute-pvc-size-v1-submittable
              template: compute-pvc-size
            arguments:
              parameters:
                - name: associated_files_size
                  value: "881211416"
                - name: size_factor
                  value: "25"
          - name: create-motif-mapping-pvc
            depends: "get-motif-mapping-pvc-size.Succeeded"
            templateRef:
              name: create-pvc-kubectl-v1-submittable
              template: create-pvc-kubectl
            arguments:
              parameters:
                - name: pvc-size
                  value: "{{tasks.get-motif-mapping-pvc-size.outputs.parameters.pvc-size-formatted}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
          - name: copy-genome-file-from-s3-to-pvc
            depends: create-motif-mapping-pvc
            templateRef:
              name: s3-object-to-pvc-v1-submittable
              template: s3-object-to-pvc
            arguments:
              parameters:
                - name: s3-key
                  value: "{{inputs.parameters.genome-s3-key}}"
                - name: filename
                  value: "{{=sprig.base(inputs.parameters['genome-s3-key'])}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: copy-bms-file-from-s3-to-pvc
            depends: create-motif-mapping-pvc
            templateRef:
              name: s3-object-to-pvc-v1-submittable
              template: s3-object-to-pvc
            arguments:
              parameters:
                - name: s3-key
                  value: "{{inputs.parameters.bm-s3-key}}"
                - name: filename
                  value: "{{=sprig.base(inputs.parameters['bm-s3-key'])}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: filter-bms-by-target
            depends: copy-bms-file-from-s3-to-pvc
            template: filter-bms-by-target-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: bm-filename
                  value: "{{=sprig.base(inputs.parameters['bm-s3-key'])}}"
                - name: target-name-1
                  value: "{{inputs.parameters.target-name-1}}"
                - name: target-name-2
                  value: "{{inputs.parameters.target-name-2}}"
          - name: unzip-genome-file
            depends: copy-genome-file-from-s3-to-pvc
            template: unzip-genome-file-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: filename
                  value: "{{=sprig.base(inputs.parameters['genome-s3-key'])}}"
          - name: run-moods
            when: "{{tasks.filter-bms-by-target.outputs.result}} == True"
            depends: (filter-bms-by-target && unzip-genome-file)
            template: run-moods-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: target-name-1
                  value: "{{inputs.parameters.target-name-1}}"
                - name: target-name-2
                  value: "{{inputs.parameters.target-name-2}}"
                - name: genome-file
                  value: "{{=sprig.trimSuffix(sprig.ext(inputs.parameters['genome-s3-key']), sprig.base(inputs.parameters['genome-s3-key']))}}"
                - name: pval
                  value: "{{inputs.parameters.pval}}"
          #################################### Clean PVC (pt. 1) ###################################
          # - Genome file
          # - Compressed genome file
          # - BMs file
          - name: remove-bms-file-from-pvc
            depends: "run-moods.Succeeded"
            templateRef:
              name: delete-file-from-pvc-v1-submittable
              template: delete-file-from-pvc
            arguments:
              parameters:
                - name: file-path
                  value: "{{=sprig.base(inputs.parameters['bm-s3-key'])}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: remove-compressed-genome-file-from-pvc
            depends: "run-moods.Succeeded"
            templateRef:
              name: delete-file-from-pvc-v1-submittable
              template: delete-file-from-pvc
            arguments:
              parameters:
                - name: file-path
                  value: "{{=sprig.base(inputs.parameters['genome-s3-key'])}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: remove-genome-file-from-pvc
            depends: "run-moods.Succeeded"
            templateRef:
              name: delete-file-from-pvc-v1-submittable
              template: delete-file-from-pvc
            arguments:
              parameters:
                - name: file-path
                  value: "{{=sprig.trimSuffix(sprig.ext(inputs.parameters['genome-s3-key']), sprig.base(inputs.parameters['genome-s3-key']))}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          # ##########################################################################################
          - name: convert-moods-output-to-sorted-bed
            depends: (remove-bms-file-from-pvc && remove-genome-file-from-pvc && remove-compressed-genome-file-from-pvc)
            template: convert-moods-output-to-sorted-bed-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: target-name-1
                  value: "{{inputs.parameters.target-name-1}}"
                - name: target-name-2
                  value: "{{inputs.parameters.target-name-2}}"
                - name: out-s3-key
                  value: "{{inputs.parameters.out-s3-key}}"
          # #################################### Clean PVC (pt. 2) ###################################
          # # - Moods output raw file
          # # - Moods unsorted bed file
          - name: remove-moods-raw-output-file-from-pvc
            depends: convert-moods-output-to-sorted-bed
            templateRef:
              name: delete-file-from-pvc-v1-submittable
              template: delete-file-from-pvc
            arguments:
              parameters:
                - name: file-path
                  value: "{{inputs.parameters.target-name-1}}.csv"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: remove-moods-bed-output-file-from-pvc
            depends: convert-moods-output-to-sorted-bed
            templateRef:
              name: delete-file-from-pvc-v1-submittable
              template: delete-file-from-pvc
            arguments:
              parameters:
                - name: file-path
                  value: "moods.bed"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          # ##########################################################################################
          - name: copy-peaks-from-s3-dag
            depends: (remove-moods-bed-output-file-from-pvc && remove-moods-raw-output-file-from-pvc)
            template: copy-peaks-from-s3
            arguments:
              parameters:
                - name: task-payload
                  value: "{{item}}"
                - name: peaks-s3-key
                  value: "{{item.peaks_s3_key}}"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
            withParam: "{{inputs.parameters.experiments}}"

          # - name: async-copy-peaks-from-s3
          #   depends: (remove-moods-bed-output-file-from-pvc && remove-moods-raw-output-file-from-pvc)
          #   template: async-copy-peaks-from-s3-cmd
          #   arguments:
          #     parameters:
          #       - name: pvc-name
          #         value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          #       - name: experiments
          #         value: "{{inputs.parameters.experiments}}"
          - name: merge-peaks-files
            depends: copy-peaks-from-s3-dag
            template: merge-peaks-files-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: target-name-1
                  value: "{{inputs.parameters.target-name-1}}"
                - name: target-name-2
                  value: "{{inputs.parameters.target-name-2}}"
          - name: remove-peaks-from-pvc
            depends: merge-peaks-files
            template: remove-peaks-from-pvc-cmd
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
          - name: run-bedtools-intersect
            depends: remove-peaks-from-pvc
            template: run-bedtools-intersect-cmd
            arguments:
              parameters:
                - name: moods-file
                  value: "moods.sorted.bed"
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: out-s3-key
                  value: "{{inputs.parameters.out-s3-key}}"
                - name: pval
                  value: "{{=sprig.replace(inputs.parameters['pval'], '.', '_')}}"
                - name: target-name-1
                  value: "{{inputs.parameters.target-name-1}}"
                - name: target-name-2
                  value: "{{inputs.parameters.target-name-2}}"
          - name: delete-motif-mapping-pvc
            depends: "run-bedtools-intersect || filter-bms-by-target"
            when: "{{tasks.convert-moods-output-to-sorted-bed.status}} == Succeeded || {{tasks.filter-bms-by-target.outputs.result}} == False"
            templateRef:
              name: delete-patch-pvc-kubectl-v1-submittable
              template: delete-patch-pvc-kubectl
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{tasks.create-motif-mapping-pvc.outputs.parameters.pvc-name}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
    - name: filter-bms-by-target-cmd
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: target-name-1
          - name: target-name-2
          - name: bm-filename
          - name: pvc-name
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      script:
        image: ghcr.io/daugo/ensembl-reg-python:latest
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        command: [python]
        source: |
          import sys
          import json
          from pathlib import Path
      
          def main() -> int:

            with open(f"/mnt/vol/{{inputs.parameters.bm-filename}}") as f:
              bml = json.load(f)

            if not f"{{inputs.parameters.target-name-2}}":
              tf_bms = [
                bm for bm in bml["bms"] if f"{{inputs.parameters.target-name-1}}" in bm["symbol"] if len(bm["symbol"]) == 1
              ]
            else:
              tf_bms = [
                bm for bm in bml["bms"] if f"{{inputs.parameters.target-name-1}}" in bm["symbol"] and f"{{inputs.parameters.target-name-2}}" in bm["symbol"] 
              ]
              
            
            for bm in tf_bms:
              for pfm in bm["pfms"]:
                for rep in pfm["representative_frequencies"]:
                  with open(f"/mnt/vol/{'_'.join(bm['symbol'])}__{rep['representative']}.pfm", "w") as f:
                    for x in rep["frequencies"]:
                      f.write("\t".join(str(i) for i in x) + "\n")

            print(bool(list(Path("/mnt/vol").glob("*pfm"))))

            return 0

          if __name__ == '__main__':
            sys.exit(main())


    - name: unzip-genome-file-cmd
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: pvc-name
          - name: filename
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        imagePullPolicy: Always
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bash:latest
        command: [bash, -c, -ue, -o, xtrace]
        args: ["ls -altrh && gunzip -f -k {{inputs.parameters.filename}} && ls -altrh"]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
    - name: run-moods-cmd
      inputs:
        parameters:
          - name: pvc-name
          - name: target-name-1
          - name: target-name-2
          - name: genome-file
          - name: pval
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        imagePullPolicy: Always
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-moods:latest
        command: [bash, -c, -ue, -o, xtrace]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
        args: [
            "ls -altrh \
             && if [ '{{inputs.parameters.target-name-2}}' = '' ]; then moods-dna.py -m *.pfm -s {{inputs.parameters.genome-file}} -p {{inputs.parameters.pval}} >{{inputs.parameters.target-name-1}}.csv; else moods-dna.py -m *.pfm -s {{inputs.parameters.genome-file}} -p {{inputs.parameters.pval}} >{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}.csv; fi \
             && ls -altrh"
          ]
          
    - name: convert-moods-output-to-sorted-bed-cmd
      retryStrategy:
        limit: "5"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: target-name-1
          - name: target-name-2
          - name: pvc-name
          - name: out-s3-key
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bedsort:latest
        command: [bash, -c, -ue, -o, xtrace]
        args: ["
            ls -altrh \
            && if [ '{{inputs.parameters.target-name-2}}' = '' ]; then awk 'BEGIN{FS=\",\"; OFS=\"\t\"}; { split($1, contig_info, \" \"); len=length($6); print contig_info[1],$3+1,$3+len,$5\";\"contig_info[3]\";\"$2,\"1000\",$4}' {{inputs.parameters.target-name-1}}.csv > moods.bed; else awk 'BEGIN{FS=\",\"; OFS=\"\t\"}; { split($1, contig_info, \" \"); len=length($6); print contig_info[1],$3+1,$3+len,$5\";\"contig_info[3]\";\"$2,\"1000\",$4}' {{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}.csv > moods.bed; fi \
            && bedSort moods.bed moods.sorted.bed \
            && ls -altrh"
          ]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
    - name: copy-peaks-from-s3
      inputs:
        parameters:
          - name: task-payload
          - name: peaks-s3-key
          - name: pvc-name
      dag:
        tasks:
          - name: copy-peaks-file-from-s3-to-pvc
            templateRef:
              name: s3-object-to-pvc-v1-submittable
              template: s3-object-to-pvc
            arguments:
              parameters:
                - name: s3-key
                  value: "{{inputs.parameters.peaks-s3-key}}"
                - name: filename
                  value: "{{=sprig.base(inputs.parameters['peaks-s3-key'])}}"
                - name: pvc-name
                  value: "{{inputs.parameters.pvc-name}}"
    - name: async-copy-peaks-from-s3-cmd
      retryStrategy:
        limit: "5"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: s3-endpoint
            value: "https://uk1s3.embassy.ebi.ac.uk"
          - name: bucket
            value: "ensembl-regulation-71319003-analysis-pipelines-b1"
          - name: pvc-name
          - name: experiments
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      script:
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ensembl-regulation-s3embassy-credentials
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ensembl-regulation-s3embassy-credentials
                key: secretKey
        image: ghcr.io/daugo/ensembl-reg-python:latest
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        command: [python]
        source: |
          import sys
          import asyncio
          from pathlib import Path

          async def donwload_from_s3(s3_key):

            s3_endpoint = "{{inputs.parameters.s3-endpoint}}"
            bucket_name = "{{inputs.parameters.bucket}}"
            out_filename = f"/mnt/vol/{Path(s3_key).name}"

            proc = await asyncio.create_subprocess_exec(
              "python3",
              "-c", 
              (
                "from botocore.client import Config;"
                "import boto3 as boto3;"
                "config = Config(read_timeout=5000, connect_timeout=5000, retries={'max_attempts': 3});"
                "session = boto3.session.Session();"
                f"s3_client = session.client(service_name='s3', endpoint_url='{s3_endpoint}');"
                f"s3_client.download_file('{bucket_name}', '{s3_key}', '{out_filename}')"
              )
            )

            _, stderr = await proc.communicate()

            if stderr:
              raise Exception(f"{stderr}")

          async def download_supervisor(s3_keys):
            await asyncio.gather(
              *[
                donwload_from_s3(s3_key)
                for s3_key in s3_keys
              ]
            )


          def main():

            s3_keys = [
              exp['peaks_s3_key']
              for exp in {{inputs.parameters.experiments}}
            ]
            asyncio.run(download_supervisor(s3_keys))


          if __name__ == '__main__':
            sys.exit(main())
    - name: remove-peaks-from-pvc-cmd
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: pvc-name
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        imagePullPolicy: Always
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bash:latest
        command: [ bash, -c, -ue, -o, xtrace ]
        args: [ "ls -altrh \
                && rm -f *-peaks-*.bed \
                && ls -altrh" ]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
    - name: merge-peaks-files-cmd
      retryStrategy:
        limit: "5"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: pvc-name
          - name: target-name-1
          - name: target-name-2
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bedtools:latest
        command: [bash, -c, -ue, -o, xtrace]
        args: [
            "ls -altrh \
             && tf1=`echo '{{inputs.parameters.target-name-1}}' | tr '[:upper:]' '[:lower:]'` \
             && cat *-peaks-*-$tf1-*.bed | \
             bedtools sort | \
             bedtools merge > peaks-{{inputs.parameters.target-name-1}}.merged.sorted.bed \
             && if [ '{{inputs.parameters.target-name-2}}' != '' ]; then tf2=`echo '{{inputs.parameters.target-name-2}}' | tr '[:upper:]' '[:lower:]'`; cat *-peaks-*-$tf2-*.bed | bedtools sort |  bedtools merge > peaks-{{inputs.parameters.target-name-2}}.merged.sorted.bed; fi \
             && ls -altrh"
          ]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
    - name: sort-peaks-file-cmd
      retryStrategy:
        limit: "5"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: peaks-file
          - name: pvc-name
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bedsort:latest
        command: [bash, -c, -ue, -o, xtrace]
        args: [
            "ls -altrh \
             && bedSort {{inputs.parameters.peaks-file}} peaks.sorted.bed \
             && ls -altrh"
          ]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
    - name: run-bedtools-intersect-cmd
      inputs:
        parameters:
          - name: moods-file
          - name: pvc-name
          - name: out-s3-key
          - name: target-name-1
          - name: target-name-2
          - name: pval
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      container:
        imagePullPolicy: Always
        workingDir: /mnt/vol
        image: ghcr.io/daugo/ensembl-reg-bedtools:latest
        command: [bash, -c, -ue, -o, xtrace]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            cpu: 2900m
            memory: 25Gi
          requests:
            cpu: 2500m
            memory: 20Gi
        args: [
            "ls -altrh \
             && bedtools intersect -f 1 -wa -names -sorted -a {{inputs.parameters.moods-file}} -b peaks-{{inputs.parameters.target-name-1}}.merged.sorted.bed > moods_peaks_intersect.sorted.bed \
             && ls -altrh \
             && if [ '{{inputs.parameters.target-name-2}}' != '' ]; then bedtools intersect -f 1 -wa -names -sorted -a {{inputs.parameters.moods-file}} -b peaks-{{inputs.parameters.target-name-2}}.merged.sorted.bed >> moods_peaks_intersect.sorted.bed;  ls -altrh; sort -k1,1 -k2,2n moods_peaks_intersect.sorted.bed | uniq -c | grep -v '^ *1 ' | sort -k 2,2 -k3,3n | awk '{ $1=\"\"; print $0 }' > moods_peaks_intersect.sorted.bed; fi \
             && ls -altrh"
          ]
      outputs:
        artifacts:
          - name: sorted-bed
            path: "/mnt/vol/moods_peaks_intersect.sorted.bed"
            archive:
              none: {}
            s3:
              key: "motifs/Homo_sapiens/GRCh38/exp/r113-v2/{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}/chip-seq-{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}-validated-motifs_p_{{inputs.parameters.pval}}.bed"
          # - name: "moods-output"
          #   path: "/mnt/vol/moods.sorted.bed"
          #   archive:
          #     none: {}
          #   s3: 
          #     key: "motifs/Homo_sapiens/GRCh38/exp/r113/{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}/chip-seq-{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}-moods-motifs_p_{{inputs.parameters.pval}}.bed"
          # - name: "merged-peaks"
          #   path: "/mnt/vol/peaks.merged.sorted.bed"
          #   archive:
          #     none: {}
          #   s3: 
          #     key: "motifs/Homo_sapiens/GRCh38/exp/r113/{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}/chip-seq-{{inputs.parameters.target-name-1}}_{{inputs.parameters.target-name-2}}-merged-peaks_p_{{inputs.parameters.pval}}.bed"
