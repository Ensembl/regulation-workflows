apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: get-rfs-alignments-tasks-v1-submittable
spec:
  entrypoint: get-rfs-alignments-tasks-dag
  imagePullSecrets:
    - name: ghcr-pull-token
  podGC:
    strategy: OnPodSuccess

  templates:
    - name: get-rfs-alignments-tasks-dag
      inputs:
        parameters:
          - name: assembly_ensembl_accession
            value: ""
          - name: experiment_type
            value: ""
          - name: species_name
            value: ""
          - name: epigenome_name_contains
            value: ""
          - name: epigenome_group_id
            value: ""
          - name: skip
            value: "0"
          - name: limit
            value: "20"
          - name: skip-execution
            value: "false"
          - name: check-integrity
            value: "false"
          - name: overwrite-results
            value: "false"
          - name: exclude_tasks_with_registered_results
            value: "false"
          - name: kubeconfig-path
      dag:
        tasks:
          - name: get-rfs-alignments-tasks-url
            templateRef:
              name: compute-rfs-alignments-tasks-url-v1-submittable
              template: compute-rfs-alignments-tasks-url
            arguments:
              parameters:
                - name: svc-name
                  value: "regulation-pipelines-api-service"
                - name: namespace
                  value: "regulation-pipelines-api"
                - name: assembly_ensembl_accession
                  value: "{{inputs.parameters.assembly_ensembl_accession}}"
                - name: experiment_type
                  value: "{{inputs.parameters.experiment_type}}"
                - name: species_name
                  value: "{{inputs.parameters.species_name}}"
                - name: epigenome_name_contains
                  value: "{{inputs.parameters.epigenome_name_contains}}"
                - name: epigenome_group_id
                  value: "{{inputs.parameters.epigenome_group_id}}"
                - name: skip
                  value: "{{inputs.parameters.skip}}"
                - name: limit
                  value: "{{inputs.parameters.limit}}"
                - name: exclude_tasks_with_registered_results
                  value: "{{inputs.parameters.exclude_tasks_with_registered_results}}"

          - name: execute-get-rfs-alignments-tasks
            depends: "get-rfs-alignments-tasks-url"
            templateRef:
              name: get-request-from-reg-pipelines-api-v1-submittable
              template: get-request-from-reg-pipelines-api
            arguments:
              parameters:
                - name: url
                  value: "{{tasks.get-rfs-alignments-tasks-url.outputs.result}}"


          - name: submit-rfs-alignments-tasks
            when: "{{inputs.parameters.skip-execution}} == false"
            depends: "execute-get-rfs-alignments-tasks"
            templateRef:
              #              name: multiple-merge-run-alignments-v1-submittable
              #              template: multiple-merge-run-alignments
              name: muliple-rfs-alignments-v1-submittable
              template: multiple-rfs-alignments
            arguments:
              parameters:
                - name: read_file_sets_alignment_tasks
                  value: "{{tasks.execute-get-rfs-alignments-tasks.outputs.result}}"
                - name: overwrite-results
                  value: "{{inputs.parameters.overwrite-results}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"

          - name: check-integrity-rfs-alignments-integrity
            when: "{{inputs.parameters.check-integrity}} == true"
            depends: "execute-get-rfs-alignments-tasks && (submit-rfs-alignments-tasks.Succeeded || submit-rfs-alignments-tasks.Skipped)"
            templateRef:
              name: check-integrity-rfs-alignments-v1-submittable
              template: check-rfs-alignments
            arguments:
              parameters:
                - name: read_file_sets_alignment_tasks
                  value: "{{tasks.execute-get-rfs-alignments-tasks.outputs.result}}"
                - name: kubeconfig-path
                  value: "{{inputs.parameters.kubeconfig-path}}"
