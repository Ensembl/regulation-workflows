apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: rfs-alignment-v3-submittable
spec:
  entrypoint: rfs-alignment
  imagePullSecrets:
    - name: ghcr-pull-token

  templates:
    - name: rfs-alignment
      inputs:
        artifacts:
          - name: task-payload
        parameters:
          - name: kubeconfig-path
          - name: overwrite-results
      dag:
        tasks:
          - name: unwrap-n-validate-payload
            template: private-rfs-alignment-facade
            arguments:
              artifacts:
                - name: task-payload
                  from: "{{inputs.artifacts.task-payload}}"


    - name: private-rfs-alignment-facade
      inputs:
        artifacts:
          - name: task-payload
      dag:
        tasks:
          - name: validate-rfs-alg-payload
            template: private-validate-rfs-alg-payload
            arguments:
              artifacts:
                - name: task-payload
                  from: "{{inputs.artifacts.task-payload}}"
      outputs:
        parameters:
          - name: assembly_id
            value: >-
              {{=
                jsonpath(
                  tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                  '$.assembly_id'
                )
              }}
          - name: read_file_set_id
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.read_file_set_id'
                )
              }}
          - name: bowtie2_index_key
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.bowtie2_index_key'
                )
              }}
          - name: bowtie2_index_basename
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.bowtie2_index_basename'
                )
              }}
          - name: samtools_stats_output_key
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.samtools_stats_output_key'
                )
              }}
          - name: output_key
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.output_key'
                )
              }}
          - name: associated_read_files_size
            value: >-
              {{=
                jsonpath(
                    tasks['validate-rfs-alg-payload'].outputs.parameters['validated-task-payload'], 
                    '$.associated_read_files_size'
                )
              }}


    - name: private-validate-rfs-alg-payload
      inputs:
        artifacts:
          - name: task-payload
            path: /results/task_payload.json
      script:
        securityContext:
          readOnlyRootFilesystem: false
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/regulation-wf-python:3.11.7
        command: [ python ]
        source: |
          import sys
          import json

          def main() -> int:

            with open('/results/task_payload.json') as f:
              payload = json.load(f)
          
            # TODO: Validate the payload

            with open('/results/validated_task_payload.json', 'w') as f:
              f.write(json.dumps(payload))


            return 0

          if __name__ == '__main__':
            sys.exit(main())
      outputs:
        parameters:
          - name: validated-task-payload
            valueFrom:
              path: /results/validated_task_payload.json

