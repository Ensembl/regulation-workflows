# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: masked-regions-identification-v-0.1.0
spec:
  entrypoint: masked-regions-identification

  templates:
    - name: masked-regions-identification
      inputs:
        parameters:
          - name: gene-build-mask-key
          - name: controls-bed-files-key
            value: ""
          - name: masked-regions-key
      dag:
        tasks:
          - name: run-masked-regions-identification-script
            when: "{{=sprig.empty(inputs.parameters['controls-bed-files-key'])}}"
            template: masked-regions-identification-script-without-controls
            arguments:
              parameters:
                - name: gene-build-mask-filename
                  value: "{{=sprig.base(inputs.parameters['gene-build-mask-key'])}}"
                - name: gene-build-mask-key
                  value: "{{inputs.parameters.gene-build-mask-key}}"
                - name: masked-regions-filename
                  value: "{{=sprig.base(inputs.parameters['masked-regions-key'])}}"
                - name: masked-regions-key
                  value: "{{inputs.parameters.masked-regions-key}}"

          - name: run-masked-regions-identification-script-with-controls
            when: "!{{=sprig.empty(inputs.parameters['controls-bed-files-key'])}}"
            template: masked-regions-identification-script-with-controls
            arguments:
              parameters:
                - name: gene-build-mask-filename
                  value: "{{=sprig.base(inputs.parameters['gene-build-mask-key'])}}"
                - name: gene-build-mask-key
                  value: "{{inputs.parameters.gene-build-mask-key}}"
                - name: controls-bed-files-key
                  value: "{{inputs.parameters.controls-bed-files-key}}"
                - name: masked-regions-filename
                  value: "{{=sprig.base(inputs.parameters['masked-regions-key'])}}"
                - name: masked-regions-key
                  value: "{{inputs.parameters.masked-regions-key}}"

    - name: masked-regions-identification-script-without-controls
      retryStrategy:
        limit: "3"
        retryPolicy: "OnError"
      inputs:
        parameters:
          # Input artifacts information
          - name: gene-build-mask-filename
          - name: gene-build-mask-key
          # Output file
          - name: masked-regions-filename
          - name: masked-regions-key
        artifacts:
          - name: gene-build-mask
            path: /home/ensreg/workdir/{{inputs.parameters.gene-build-mask-filename}}
            s3:
              key: "{{inputs.parameters.gene-build-mask-key}}"
      container:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/masked-regions-identification:0.1.0
        command: [ bash, -c, -ue, -o ,xtrace, -o, pipefail ]
        args: [ "ls -altrh \
              && Rscript maskedRegionsIdentification.R \
              {{inputs.parameters.gene-build-mask-filename}} \
              {{inputs.parameters.masked-regions-filename}} \
              && ls -altrh" ]
        resources:
          limits:
            memory: 15Gi
            cpu: 1200m
          requests:
            memory: 8Gi
            cpu: 900m
      outputs:
        artifacts:
          - name: final_bed
            path: /home/ensreg/workdir/{{inputs.parameters.masked-regions-filename}}
            archive:
              none: { }
            s3:
              key: "{{inputs.parameters.masked-regions-key}}"


    - name: masked-regions-identification-script-with-controls
      retryStrategy:
        limit: "3"
        retryPolicy: "OnError"
      inputs:
        parameters:
          # Input artifacts information
          - name: gene-build-mask-filename
          - name: gene-build-mask-key
          - name: controls-bed-files-key
          # Output file
          - name: masked-regions-filename
          - name: masked-regions-key
        artifacts:
          - name: gene-build-mask
            path: /home/ensreg/workdir{{inputs.parameters.gene-build-mask-filename}}
            s3:
              key: "{{inputs.parameters.gene-build-mask-key}}"
          - name: controls-bed-files
            path: /home/ensreg/workdircontrols-bed-files/
            s3:
              key: "{{inputs.parameters.controls-bed-files-key}}"
      container:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/masked-regions-identification:0.1.0
        command: [ bash, -c, -ue, -o ,xtrace, -o, pipefail ]
        args: [ "ls -altrh \
              && ls -altrh controls-bed-files/ \
              && Rscript maskedRegionsIdentification.R \
              {{inputs.parameters.gene-build-mask-filename}} \
              {{inputs.parameters.masked-regions-filename}} \
              controls-bed-files/ \
              && ls -altrh" ]
        resources:
          limits:
            memory: 15Gi
            cpu: 1200m
          requests:
            memory: 8Gi
            cpu: 900m
      outputs:
        artifacts:
          - name: final_bed
            path: /home/ensreg/workdir{{inputs.parameters.masked-regions-filename}}
            archive:
              none: { }
            s3:
              key: "{{inputs.parameters.masked-regions-key}}"