# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: chip-seq-genrich-values-cmd-v-0.1.0
spec:
  entrypoint: chip-seq-genrich-values-cmd

  templates:
    - name: chip-seq-genrich-values-cmd
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
          maxDuration: "12h"
        retryPolicy: "OnError"
      inputs:
        parameters:
          - name: signal_files_formatted_str
          - name: control_files_formatted_str
          - name: chipmentation
          - name: out_pq_values_filename
          - name: out_pileups_filename
          - name: out_s3_prefix
          - name: alignments-pvc
          - name: pq-values-pvc
          - name: pileups-pvc
          - name: masked-regions-s3-key
          - name: masked-regions-filename
        artifacts:
          - name: masked-regions-file
            path: /mnt/vol/{{inputs.parameters.masked-regions-filename}}
            s3:
              key: "{{inputs.parameters.masked-regions-s3-key}}"
      container:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/genrich:0.6.1
        workingDir: /mnt/vol
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
        command: [ bash, -c, -uef, -o, xtrace, -o, pipefail ]
        args: [ "ls -altrh \
                && rm -f /mnt/vol_pq_values/* /mnt/vol_pileups/* \
                && SIGNAL_BAM_FILES={{inputs.parameters.signal_files_formatted_str}} \
                && CONTROL_BAM_FILES={{inputs.parameters.control_files_formatted_str}} \
                && GENRICH_ARGS=(
                   -t ${SIGNAL_BAM_FILES} \
                   -X \
                   -f /mnt/vol_pq_values/{{inputs.parameters.out_pq_values_filename}} \
                   -k /mnt/vol_pileups/{{inputs.parameters.out_pileups_filename}} \
                   -r \
                   -y \
                   -q 0.1 \
                   -s 20 \
                   -e MT \
                   -E {{inputs.parameters.masked-regions-filename}} \
                   -v \
                   ) \
               && if ! [[ -z ${CONTROL_BAM_FILES} ]]; then GENRICH_ARGS+=( -c ${CONTROL_BAM_FILES} ); fi \
               && if [[ {{inputs.parameters.chipmentation}} == 'true' ]]; then GENRICH_ARGS+=( -j ); fi \
               && Genrich ${GENRICH_ARGS[@]} \
               && echo aw-artifacts/\
               {{workflow.creationTimestamp.Y}}/\
               {{workflow.creationTimestamp.m}}/\
               {{workflow.creationTimestamp.d}}/\
               {{workflow.name}}/{{pod.name}}/\
               main.log \
               > genrich-run-logs-s3-key.txt \
               && ls -altrh" ]

        resources:
          limits:
            cpu: 1900m
            memory: 120Gi
          requests:
            cpu: 900m
            memory: 110Gi
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
          - name: pq-values-vol
            mountPath: /mnt/vol_pq_values
          - name: pileups-vol
            mountPath: /mnt/vol_pileups
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: "{{inputs.parameters.alignments-pvc}}"
        - name: pq-values-vol
          persistentVolumeClaim:
            claimName: "{{inputs.parameters.pq-values-pvc}}"
        - name: pileups-vol
          persistentVolumeClaim:
            claimName: "{{inputs.parameters.pileups-pvc}}"
      outputs:
        parameters:
          - name: genrich-run-logs-s3-key
            valueFrom:
              path: /mnt/vol/genrich-run-logs-s3-key.txt