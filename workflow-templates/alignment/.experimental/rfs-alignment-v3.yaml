# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: rfs-alignment-v3-submittable
spec:
  entrypoint: rfs-alignment
  imagePullSecrets:
    - name: ghcr-pull-token
    - name: ebi-gcr-pull-token
  podGC:
    strategy: OnPodSuccess
  securityContext:
    runAsNonRoot: true
    runAsUser: 8737

  templates:
    - name: rfs-alignment
      inputs:
        artifacts:
          - name: task-payload
        parameters:
          - name: parent-wf-name
            value: ""
          - name: kubeconfig-path
          - name: overwrite-results
      dag:
        tasks:
          - name: unwrap-n-validate-payload
            template: private-rfs-alignment-facade
            arguments:
              artifacts:
                - name: task-payload
                  from: "{{inputs.artifacts.task-payload}}"


    - name: private-rfs-alignment-facade
      inputs:
        artifacts:
          - name: task-payload
      dag:
        tasks:
          - name: validate-rfs-aln-payload
            template: private-validate-rfs-aln-payload
            arguments:
              artifacts:
                - name: task-payload
                  from: "{{inputs.artifacts.task-payload}}"
      outputs:
        parameters:
          - name: assembly_id
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.assembly_id'
                )
          - name: read_file_set_id
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.read_file_set_id'
                )
          - name: bowtie2_index_key
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.bowtie2_index_key'
                )
          - name: bowtie2_index_basename
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.bowtie2_index_basename'
                )
          - name: samtools_stats_output_key
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.samtools_stats_output_key'
                )
          - name: output_key
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.output_key'
                )
          - name: associated_read_files_size
            valueFrom:
              expression: >-
                jsonpath(
                    tasks['validate-rfs-aln-payload'].outputs.parameters['validated-task-payload'],
                    '$.associated_read_files_size'
                )


    - name: private-validate-rfs-aln-payload
      inputs:
        artifacts:
          - name: task-payload
            path: /home/ensreg/workdir/task_payload.json
      script:
        securityContext:
          readOnlyRootFilesystem: false
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/regulation-wf-python:3.11.7
        command: [ python ]
        source: |
          import os
          import sys
          import json

          def main() -> int:
          
            os.system('ls -altrh .')
            os.system('whoami')

            with open('{{inputs.artifacts.task-payload.path}}') as f:
              payload = json.load(f)
          
            # TODO: Validate the payload

            with open('validated_task_payload.json', 'w') as f:
              f.write(json.dumps(payload))

            return 0

          if __name__ == '__main__':
            sys.exit(main())
      outputs:
        parameters:
          - name: validated-task-payload
            valueFrom:
              path: validated_task_payload.json

