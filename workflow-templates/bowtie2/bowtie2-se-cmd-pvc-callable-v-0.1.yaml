# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: bowtie2-se-cmd-pvc-callable-v-0.1.2
spec:
  entrypoint: dag-bowtie2-cmd-pvc-callable


  # TODO: Refactor this to use the same template as bowtie2-pe-cmd-pvc-callable.yaml
  templates:
    - name: dag-bowtie2-cmd-pvc-callable
      inputs:
        parameters:
          - name: pvc-name
          # Input file
          - name: first_read_file_name
          - name: bowtie2_index_key
          - name: bowtie2_index_basename
          # Output prefix
          - name: output_prefix
          - name: output_filename
          # Other Parameters
          - name: num_threads
            value: "9"
      dag:
        tasks:
          - name: execute-bowtie2-cmd-pvc-callable
            template: bowtie2-cmd-pvc-callable
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{inputs.parameters.pvc-name}}"
                # Input file
                - name: first_read_file_name
                  value: "{{inputs.parameters.first_read_file_name}}"
                - name: bowtie2_index_key
                  value: "{{inputs.parameters.bowtie2_index_key}}"
                - name: bowtie2_index_basename
                  value: "{{inputs.parameters.bowtie2_index_basename}}"
                # Output prefix
                - name: output_prefix
                  value: "{{inputs.parameters.output_prefix}}"
                - name: output_filename
                  value: "{{inputs.parameters.output_filename}}"
                # Other Parameters
                - name: num_threads
                  value: "{{inputs.parameters.num_threads}}"
                # Resources config for init container
                - name: cpu-limit
                  value: "5000m"
                - name: memory-limit
                  value: "15Gi"
          - name: alignment-from-pvc-to-s3-object
            depends: execute-bowtie2-cmd-pvc-callable.Succeeded
            templateRef:
              name: from-pvc-to-s3-object-v1-submittable
              template: from-pvc-to-s3-object
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{inputs.parameters.pvc-name}}"
                - name: filename
                  value: "{{inputs.parameters.output_filename}}"
                - name: s3-key
                  value: "{{inputs.parameters.output_prefix}}{{inputs.parameters.output_filename}}"
                - name: cpu-limit
                  value: "6000m"
                - name: memory-limit
                  value: "28Gi"


    - name: bowtie2-cmd-pvc-callable
      retryStrategy:
        limit: "6"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "OnError"
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      inputs:
        parameters:
          - name: pvc-name
          # Input file
          - name: first_read_file_name
          - name: bowtie2_index_key
          - name: bowtie2_index_basename
          # Output prefix
          - name: output_prefix
          - name: output_filename
          # Other Parameters
          - name: num_threads
          # Resources config for init container
          - name: cpu-limit
          - name: memory-limit
        artifacts:
          - name: bowtie2_index
            path: "/home/ensreg/workdir/bwt2_idx"
            s3:
              key: "{{inputs.parameters.bowtie2_index_key}}{{inputs.parameters.bowtie2_index_basename}}.tar.gz"

      container:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/bowtie2_samtools:2.4.5_1.15.1
        workingDir: /mnt/vol
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
        podSpecPatch: '{ "initContainers": [ { "init": "wait", "resources": { "limits": { "cpu": "{{input.parameters.cpu-limit}}", "memory": "{{input.parameters.memory-limit}}" } } } ] }'
        command: [ bash, -c, -uef, -o, xtrace ]
        args: [ "ls -altrh \
              && ls -altrh /home/ensreg/workdir/bwt2_idx \
              && bowtie2 \
              --threads {{inputs.parameters.num_threads}} \
              --very-sensitive \
              -k 10 \
              --mm \
              -x /home/ensreg/workdir/bwt2_idx/{{inputs.parameters.bowtie2_index_basename}} \
              -U {{inputs.parameters.first_read_file_name}} \
              | samtools sort \
              -o {{inputs.parameters.output_filename}} \
              -@ {{inputs.parameters.num_threads}} \
              && ls -altrh " ]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          limits:
            memory: 42Gi
            cpu: 9900m
          requests:
            memory: 38Gi
            cpu: 8900m
