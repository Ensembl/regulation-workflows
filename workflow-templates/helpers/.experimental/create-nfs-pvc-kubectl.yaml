# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: create-nfs-pvc-kubectl-v1-submittable
spec:
  entrypoint: create-nfs-pvc-kubectl
  imagePullSecrets:
    - name: ghcr-pull-token
  podGC:
    strategy: OnPodSuccess

  templates:
    - name: create-nfs-pvc-kubectl
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        artifacts:
          - name: kubeconfig
            path: /.kube/
            git:
              repo: https://gitlab.ebi.ac.uk/ensreg/admin/kubectl-configs.git
              revision: main
              usernameSecret:
                name: kubectl-configs-repo-creds
                key: usernameSecret
              passwordSecret:
                name: kubectl-configs-repo-creds
                key: passwordSecret
        parameters:
          - name: pvc-size
          - name: kubeconfig-path
      script:
        env:
          - name: KUBECONFIG
            value: "{{inputs.parameters.kubeconfig-path}}"
        image: ghcr.io/daugo/ensembl-reg-kubectl:latest
        command: [ bash, -uef, -o, xtrace ]
        source: |
          cat <<EOF | kubectl -n argo apply -f -
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
              name: pvc-nfs-{{pod.name}}
          spec:
              storageClassName: aw-nfs
              accessModes: [ "ReadWriteMany" ]
              resources:
                requests:
                  storage: {{inputs.parameters.pvc-size}}
          EOF
      outputs:
        parameters:
          - name: pvc-name
            value: "pvc-nfs-{{pod.name}}"
            globalName: pvc-name-global
