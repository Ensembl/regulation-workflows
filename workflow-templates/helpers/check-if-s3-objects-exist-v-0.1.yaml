# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: check-if-s3-objects-exist-v-0.1.0
spec:
  entrypoint: check-if-s3-objects-exist

  templates:
    - name: check-if-s3-objects-exist
      inputs:
        parameters:
          - name: s3-keys
          # TODO: add logic to support check-types all, any, none
      #          - name: check-type
      #            value: "all"
      outputs:
        parameters:
          - name: check-response
            valueFrom:
              parameter: "{{tasks.collect-output-params.outputs.parameters.check-response}}"
      dag:
        tasks:
          - name: loop-s3-object-exists
            templateRef:
              name: check-s3-object-exists-v-0.1.0
              template: check-s3-object-exists
            arguments:
              parameters:
                - name: s3-key
                  value: "{{item}}"
            withParam: "{{inputs.parameters.s3-keys}}"

          - name: collect-output-params
            depends: loop-s3-object-exists.Succeeded
            template: check-all-true
            arguments:
              parameters:
                - name: values
                  value: "{{tasks.loop-s3-object-exists.outputs.parameters.s3-object-exists}}"

    - name: check-all-true
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "Always"
      inputs:
        parameters:
          - name: values
      outputs:
        parameters:
          - name: check-response
            value: "{{=all(jsonpath(inputs.parameters['values'], '$'), {# == 'true'})}}"
      container:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/bash:5.2.21
        command: [ bash, -c, -ue, -o, xtrace ]
        args: [ "echo {{inputs.parameters.values}}" ]