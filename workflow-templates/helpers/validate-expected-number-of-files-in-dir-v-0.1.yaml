# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: validate-expected-number-of-files-in-dir-v-0.1.0
spec:
  entrypoint: validate-number-of-files-in-dir

  templates:
    - name: validate-number-of-files-in-dir
      retryStrategy:
        limit: "5"
        backoff:
          duration: "10s"
          factor: "2"
        retryPolicy: "OnError"
      inputs:
        parameters:
          - name: pvc-name
          - name: pvc-dir
          - name: expected-number-of-files
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: '{{inputs.parameters.pvc-name}}'
      script:
        image: dockerhub.ebi.ac.uk/ensreg/workflows/container-images/python-wf-helper:3.11.7_0.1.0
        workingDir: /mnt/vol
        command: [ python ]
        source: |
          from pathlib import Path
          import json
          import sys

          def main() -> int:

            dir_name = """{{inputs.parameters.pvc-dir}}"""
            expected_number_of_files_str = """{{inputs.parameters.expected-number-of-files}}"""
            dir_path = Path(dir_name)
            expected_number_of_files = int(expected_number_of_files_str)
          
            file_count = len(list(dir_path.glob("*")))
          
            if file_count != expected_number_of_files:
              print(f"Files in {dir_name}: {list(dir_path.glob('*'))}")
              print(f"Expected {expected_number_of_files} files in {dir_name}, but found {file_count}")
              return 1
            else:
              print(f"Files in {dir_name}: {list(dir_path.glob('*'))}")
              print(f"Found {file_count} files in {dir_name}")
              return 0

          if __name__ == '__main__':
              sys.exit(main())

        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
